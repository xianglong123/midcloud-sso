buildscript {
    ext {
        springBootVersion = '2.2.1.RELEASE'
    }
    repositories {
        maven { url "https://maven.aliyun.com/repository/public" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE' // 依赖管理
    id 'java'
}

allprojects {
    apply plugin: 'java'
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        mavenLocal()
        mavenCentral()
    }

    ext {
        set('lombokVersion', "1.18.12")
    }
}

subprojects { // 子模块的通用配置
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'idea'

    repositories {
        maven { url "https://maven.aliyun.com/repository/public" }
    }

    dependencies {
        implementation 'com.alibaba:druid-spring-boot-starter:1.1.10'
        implementation('org.springframework.boot:spring-boot-starter-web')
        implementation "org.projectlombok:lombok:1.18.12"
        implementation 'mysql:mysql-connector-java:8.0.13'
        implementation("org.springframework.boot:spring-boot-configuration-processor")
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2'
        testImplementation "org.springframework.boot:spring-boot-starter-test"
    }

    test {
        useJUnitPlatform()
        ignoreFailures = true
    }

    jar {
        enabled = true
    }

    compileJava {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
        options.encoding = 'UTF-8'
    }

    java {
        withSourcesJar()
    }

    dependencies {
        testImplementation('org.springframework.boot:spring-boot-starter-test')
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

group 'com.cmft'
